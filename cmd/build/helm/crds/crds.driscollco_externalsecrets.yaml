---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.1
  name: externalsecrets.crds.driscollco
spec:
  group: crds.driscollco
  names:
    kind: ExternalSecret
    listKind: ExternalSecretList
    plural: externalsecrets
    singular: externalsecret
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The vault the secret is sourced from
      jsonPath: .spec.source-vault
      name: Vault
      type: string
    - description: The item the secret is sourced from
      jsonPath: .spec.source-item
      name: Item
      type: string
    - description: The item the secret is sourced from
      jsonPath: .spec.source-section
      name: Section
      type: string
    - description: The name of the subitem which contains the secret
      jsonPath: .spec.source-key
      name: Key
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: ExternalSecret is the intention to create a secret from a 1Password
          item
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ExternalSecretSpec contains instructions on how to source
              and create a secret
            properties:
              secret:
                description: SecretConfig defines the location within Kubernetes where
                  the secret should be created
                properties:
                  keys:
                    description: |-
                      Keys maps individual 1Password section keys to data items within a secret
                      This does not need to be populated for Docker secret types as this will be calculated by the operator
                    items:
                      properties:
                        from:
                          type: string
                        to:
                          type: string
                      required:
                      - from
                      - to
                      type: object
                    type: array
                  name:
                    description: The name of the secret
                    type: string
                  namespace:
                    description: The namespace the secret should be created in
                    type: string
                  secret-type:
                    description: |-
                      Type of secret. Leave unpopulated for a standard secret. Choose docker for a secret which can be used to pull images from a registry.
                      If using 'docker' as the type you don't need to specify any keys as this will be done for you
                      Possible types:
                        * basic - Standard secret
                        * docker - Secret used for pulling images from a docker registry
                    enum:
                    - basic
                    - docker
                    type: string
                required:
                - name
                - namespace
                - secret-type
                type: object
              source:
                description: SourceConfig defines the location within 1Password where
                  the information can be found
                properties:
                  item:
                    type: string
                  section:
                    type: string
                  vault:
                    type: string
                required:
                - item
                - section
                - vault
                type: object
            required:
            - secret
            - source
            type: object
          status:
            description: ExternalSecretStatus defines the state of a secret as it
              is created
            properties:
              conditions:
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              events:
                items:
                  properties:
                    message:
                      type: string
                    reason:
                      type: string
                    timestamp:
                      format: date-time
                      type: string
                    type:
                      type: string
                  required:
                  - message
                  - reason
                  - timestamp
                  - type
                  type: object
                type: array
              phase:
                type: string
            required:
            - events
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
