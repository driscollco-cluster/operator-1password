name: Deploy

on:
  push:
    branches:
      - main

env:
  codePath: cmd
  buildPath: cmd/build
  gcpRegion: europe-west1
  # List of files/directories to examine for changes.
  CHECK_PATHS: "go.mod go.sum internal/ cmd/main.go"

jobs:
  check-changes:
    name: Check for Key Changes
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.determine.outputs.changed }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Determine Key Changes
        id: determine
        run: |
          # Get the list of changed files between the previous and current commit.
          CHANGED_FILES=$(git diff --name-only "${{ github.event.before }}" "${{ github.event.after }}" || true)
          echo "Changed files: $CHANGED_FILES"
          TRIGGER=false
          # Loop over each path in the CHECK_PATHS list.
          for path in $CHECK_PATHS; do
            if echo "$CHANGED_FILES" | grep -q "^$path"; then
              TRIGGER=true
              echo "Detected change in: $path"
              break
            fi
          done
          echo "changed=$TRIGGER" >> $GITHUB_OUTPUT

  build-binary:
    name: Compile Service
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.changed == 'true'
    steps:
      - name: Set Access
        run: |
          git config --global url."https://${{ secrets.GH_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Cache Go Modules and Build Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Compile Service
        run: cd $buildPath; make build
      - name: Save Binary
        uses: actions/upload-artifact@v4
        with:
          name: binary
          path: ${{ env.buildPath }}/service

  docker:
    name: Store In Artifact Registry
    runs-on: ubuntu-latest
    needs: build-binary
    if: needs.check-changes.outputs.changed == 'true'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install Yq
        run: |
          wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq
      - id: auth
        name: Install Key
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_KEY }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      - name: Use gcloud CLI
        run: gcloud info
      - name: Configure Docker
        run: gcloud auth configure-docker $gcpRegion-docker.pkg.dev --quiet
      - name: Fetch Binary
        uses: actions/download-artifact@v4
        with:
          name: binary
      - name: Permissions Update
        run: chmod a+x service
      - name: Relocate Binary
        run: mv service $buildPath
      - name: Send To Docker
        run: cd $buildPath; make docker

  cluster:
    name: Deploy To Cluster
    runs-on: ubuntu-latest
    needs: [check-changes, docker]
    if: always()
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_CLIENT_SECRET }}
          version: latest
          tags: tag:gh-actions
      - name: Setup KubeConfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > ~/.kube/config
          chmod 600 ~/.kube/config
          export KUBECONFIG=~/.kube/config
      - name: Deploy to Kubernetes
        run: cd $buildPath; make deploy
